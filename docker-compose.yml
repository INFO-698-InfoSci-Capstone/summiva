networks:
  summiva-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data:

services:

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-summiva_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-summiva_pass}
      - POSTGRES_DB=${POSTGRES_DB:-summiva_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - summiva-network
    profiles: ["all", "db", "postgres", "dev", "test", "api"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-summiva_user} -d ${POSTGRES_DB:-summiva_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infra/docker/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-summiva_redis_password}
    networks:
      - summiva-network
    profiles: ["all", "db", "redis", "dev", "test", "api", "cache"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-summiva_redis_password}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - summiva-network
    profiles: ["all", "db", "mongodb", "dev", "test", "nlp"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infra/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - summiva-network
    profiles: ["all", "monitoring", "metrics"]
    entrypoint: ["/etc/prometheus/entrypoint.sh"]

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - summiva-network
    profiles: ["all", "monitoring", "metrics"]
    depends_on:
      - prometheus

  auth:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - SERVICE_NAME=auth
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-summiva_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-summiva_pass}
      - POSTGRES_DB=${POSTGRES_DB:-summiva_db}
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000

    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=auth"
    profiles: ["all", "nlp", "dev"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G


  summarization:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - SERVICE_NAME=summarization
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000

    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=summarization"
    profiles: ["all", "nlp", "dev"]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G


  tagging:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - SERVICE_NAME=tagging
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000

    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=tagging"
    profiles: ["all", "nlp", "dev"]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G


  grouping:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      - SERVICE_NAME=grouping
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000

    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=grouping"
    profiles: ["all", "nlp", "dev"]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G


  search:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    environment:
      - SERVICE_NAME=search
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000

    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=search"
    profiles: ["all", "nlp", "dev"]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G


  clustering:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8006:8000"
    environment:
      - SERVICE_NAME=clustering
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000

    entrypoint: ["/entrypoint.sh"]
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=clustering"
    profiles: ["all", "nlp", "dev"]
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  frontend:
    build:
      context: ./src/frontend/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - BACKEND_BASE_URL=http://auth:8000
      - AUTH_SERVICE_URL=http://auth:8000
      - SUMMARIZATION_SERVICE_URL=http://summarization:8000
      - TAGGING_SERVICE_URL=http://tagging:8000
      - GROUPING_SERVICE_URL=http://grouping:8000
      - SEARCH_SERVICE_URL=http://search:8000
    volumes:
      - ./src/frontend/:/app
    networks:
      - summiva-network
    depends_on:
      - auth
      - summarization
      - tagging
      - grouping
      - search
    labels:
      - "com.summiva.service=frontend"
    profiles: ["all", "web", "dev", "frontend"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
