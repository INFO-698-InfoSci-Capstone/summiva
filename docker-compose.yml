networks:
  summiva-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services:

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=backend
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-summiva}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./src:/app/src
      - ./data:/app/src/data
    networks:
      - summiva-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=backend"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  auth:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=auth
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-summiva}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "com.summiva.service=auth"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  summarization:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=summarization
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=summarization"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  tagging:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=tagging
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=tagging"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  grouping:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=grouping
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=grouping"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  search:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=search
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=search"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  clustering:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8006:8000"
    environment:
      - ENVIRONMENT=development
      - SERVICE_NAME=clustering
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./src:/app/src
    networks:
      - summiva-network
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    labels:
      - "com.summiva.service=clustering"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-summiva}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - summiva-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - summiva-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - summiva-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - summiva-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - summiva-network
    depends_on:
      - prometheus
