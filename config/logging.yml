version: 1
disable_existing_loggers: False

formatters:
  standard:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(name)s %(levelname)s %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: json
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

loggers:
  # Root logger
  '':
    handlers: [console, file]
    level: INFO
    propagate: True

  # Application loggers
  app:
    handlers: [console, file, error_file]
    level: INFO
    propagate: False

  app.api:
    handlers: [console, file, error_file]
    level: INFO
    propagate: False

  app.auth:
    handlers: [console, file, error_file]
    level: INFO
    propagate: False

  app.models:
    handlers: [console, file, error_file]
    level: INFO
    propagate: False

  # Third party loggers
  uvicorn:
    handlers: [console, file]
    level: INFO
    propagate: False

  sqlalchemy:
    handlers: [file]
    level: WARNING
    propagate: False

  celery:
    handlers: [console, file]
    level: INFO
    propagate: False 